buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.11.0'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.flywaydb.flyway' version '9.11.0'
}

group = 'com.fullcycle.admin.catalago.infrastructure'

bootJar {
    archiveFileName = 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

repositories {
    mavenCentral()  // Definir repositório Maven Central para resolver dependências do projeto
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation group: 'io.vavr', name: 'vavr', version: '0.10.4'

    implementation('mysql:mysql-connector-java')

    implementation('org.springdoc:springdoc-openapi-webmvc-core:1.6.14')
    implementation('org.springdoc:springdoc-openapi-ui:1.6.14')

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }

    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')

    testImplementation('org.flywaydb:flyway-core')
    testImplementation('org.flywaydb:flyway-mysql')

    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testImplementation ('com.github.javafaker:javafaker:1.0.2') {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
    testImplementation 'org.yaml:snakeyaml:1.29'

    testImplementation('org.testcontainers:testcontainers:1.17.6')
    testImplementation('org.testcontainers:mysql:1.17.6')
    testImplementation('org.testcontainers:junit-jupiter:1.17.6')

    testRuntimeOnly('com.h2database:h2')
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
    cleanDisabled = false  // Habilitar temporariamente a opção clean
}

test {
    useJUnitPlatform()
}